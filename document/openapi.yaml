openapi: 3.0.3
info:
  title: trapziu
  version: 1.0.0
  contact: {}
servers:
- url: http://127.0.0.1:8000
paths:
  /users:
    get:
      tags:
      - Users router
      summary: Fetch user
      description: Fetch user
      operationId: fetchUser
      requestBody:
        content:
          application/json:
            examples:
              Fetch user:
                value: ''
      responses:
        '200':
          description: ''
    put:
      tags:
      - Users router
      summary: Update user
      description: Update user
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    intro:
                      type: string
                      example: Test update on intro
            examples:
              Update user:
                value:
                  user:
                    intro: Test update on intro
      responses:
        '200':
          description: ''
    post:
      tags:
      - Users router
      summary: Login user
      description: Login user
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: test@test.com
                    password:
                      type: string
                      example: test
            examples:
              Login user:
                value:
                  user:
                    email: test@test.com
                    password: test
      responses:
        '200':
          description: ''
    delete:
      tags:
      - Users router
      summary: Delete user
      description: Delete user
      operationId: deleteUser
      responses:
        '200':
          description: ''
  /users/create:
    post:
      tags:
      - Users router
      summary: Create user
      description: Create user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: test@test.com
                    password:
                      type: string
                      example: test
                    username:
                      type: string
                      example: test
            examples:
              Create user:
                value:
                  user:
                    email: test@test.com
                    password: test
                    username: test
      responses:
        '200':
          description: ''
  /profiles/{username}:
    get:
      tags:
      - Profiles router
      summary: Get profile
      description: Get profile
      operationId: getProfile
      responses:
        '200':
          description: ''
    parameters:
    - name: username
      in: path
      required: true
      schema:
        type: string
        example: test
  /profiles/{username}/follow:
    post:
      tags:
      - Profiles router
      summary: Follow profile
      description: Follow profile
      operationId: followProfile
      responses:
        '200':
          description: ''
    delete:
      tags:
      - Profiles router
      summary: Unfollow profile
      description: Unfollow profile
      operationId: unfollowProfile
      responses:
        '200':
          description: ''
    parameters:
    - name: username
      in: path
      required: true
      schema:
        type: string
        example: test
  /profiles/{username}/block:
    post:
      tags:
      - Profiles router
      summary: Block profile
      description: Block profile
      operationId: blockProfile
      responses:
        '200':
          description: ''
    delete:
      tags:
      - Profiles router
      summary: Unblock profile
      description: Unblock profile
      operationId: unblockProfile
      responses:
        '200':
          description: ''
    parameters:
    - name: username
      in: path
      required: true
      schema:
        type: string
        example: test
  /posts:
    get:
      tags:
      - Posts router
      summary: Get posts
      description: Get posts
      operationId: getPosts
      parameters:
      - name: author
        in: query
        schema:
          type: string
          example: test
      - name: liked
        in: query
        schema:
          type: string
          example: '0'
      - name: limit
        in: query
        schema:
          type: string
          example: '10'
      - name: offset
        in: query
        schema:
          type: string
          example: '0'
      responses:
        '200':
          description: ''
    post:
      tags:
      - Posts router
      summary: Create post
      description: Create post
      operationId: createPost
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                post:
                  type: object
                  properties:
                    content:
                      type: string
                      example: content@test
                    description:
                      type: string
                      example: description@test
                    title:
                      type: string
                      example: title@test
            examples:
              Create post:
                value:
                  post:
                    content: content@test
                    description: description@test
                    title: title@test
      responses:
        '200':
          description: ''
  /posts/{post_id}:
    get:
      tags:
      - Posts router
      summary: Get post
      description: Get post
      operationId: getPost
      responses:
        '200':
          description: ''
    delete:
      tags:
      - Posts router
      summary: Delete post
      description: Delete post
      operationId: deletePost
      responses:
        '200':
          description: ''
      security:
      - {}
    parameters:
    - name: post_id
      in: path
      required: true
      schema:
        type: string
        example: '1'
  /api/posts/{post_id}:
    put:
      tags:
      - Posts router
      summary: Update post
      description: Update post
      operationId: updatePost
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                post:
                  type: object
                  properties:
                    content:
                      type: string
                      example: update@content
                    description:
                      type: string
                      example: update@description
                    title:
                      type: string
                      example: update@title
            examples:
              Update post:
                value:
                  post:
                    content: update@content
                    description: update@description
                    title: update@title
      responses:
        '200':
          description: ''
      security:
      - {}
    parameters:
    - name: post_id
      in: path
      required: true
      schema:
        type: string
        example: '1'
  /posts/{post_id}/like:
    post:
      tags:
      - Posts router
      summary: Like post
      description: Like post
      operationId: likePost
      responses:
        '200':
          description: ''
    delete:
      tags:
      - Posts router
      summary: Unlike post
      description: Unlike post
      operationId: unlikePost
      responses:
        '200':
          description: ''
    parameters:
    - name: post_id
      in: path
      required: true
      schema:
        type: string
        example: '1'
  /posts/{post_id}/comments:
    get:
      tags:
      - Posts router
      summary: Get comments
      description: Get comments
      operationId: getComments
      responses:
        '200':
          description: ''
    post:
      tags:
      - Posts router
      summary: Create comment
      description: Create comment
      operationId: createComment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: object
                  properties:
                    content:
                      type: string
                      example: comment test from test
            examples:
              Create comment:
                value:
                  comment:
                    content: comment test from test
      responses:
        '200':
          description: ''
    parameters:
    - name: post_id
      in: path
      required: true
      schema:
        type: string
        example: '2'
  /api/posts/{post_id}/comments/{comment_id}:
    delete:
      tags:
      - Posts router
      summary: Delete comment
      description: Delete comment
      operationId: deleteComment
      responses:
        '200':
          description: ''
    parameters:
    - name: post_id
      in: path
      required: true
      schema:
        type: string
        example: '1'
    - name: comment_id
      in: path
      required: true
      schema:
        type: string
        example: '1'
  /:
    get:
      summary: Root
      description: Root
      operationId: root
      responses:
        '200':
          description: ''
components:
  securitySchemes: {}
tags:
- name: Users router
- name: Profiles router
- name: Posts router

